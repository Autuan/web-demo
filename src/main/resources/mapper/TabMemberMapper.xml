<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autuan.webdemo.project.modular.member.mapper.TabMemberMapper">
  <resultMap id="BaseResultMap" type="com.autuan.webdemo.project.modular.member.entity.TabMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="custom_sign" jdbcType="VARCHAR" property="customSign" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, no, mobile, email, nickname, head_img, age, score, custom_sign, create_by, create_time, 
    update_by, update_time
  </sql>
  <select id="selectByExample" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMemberExample">
    delete from tab_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMember">
    insert into tab_member (id, no, mobile, 
      email, nickname, head_img, 
      age, score, custom_sign, 
      create_by, create_time, update_by, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{customSign,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into tab_member
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.no != null">
            no,
          </if>
          <if test="record.mobile != null">
            mobile,
          </if>
          <if test="record.email != null">
            email,
          </if>
          <if test="record.nickname != null">
            nickname,
          </if>
          <if test="record.headImg != null">
            head_img,
          </if>
          <if test="record.age != null">
            age,
          </if>
          <if test="record.score != null">
            score,
          </if>
          <if test="record.customSign != null">
            custom_sign,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.no != null">
            #{record.no,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.nickname != null">
            #{record.nickname,jdbcType=VARCHAR},
          </if>
          <if test="record.headImg != null">
            #{record.headImg,jdbcType=VARCHAR},
          </if>
          <if test="record.age != null">
            #{record.age,jdbcType=INTEGER},
          </if>
          <if test="record.score != null">
            #{record.score,jdbcType=INTEGER},
          </if>
          <if test="record.customSign != null">
            #{record.customSign,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMemberExample" resultType="java.lang.Long">
    select count(*) from tab_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_member
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.no != null">
            no = #{record.no,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            mobile = #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.nickname != null">
            nickname = #{record.nickname,jdbcType=VARCHAR},
          </if>
          <if test="record.headImg != null">
            head_img = #{record.headImg,jdbcType=VARCHAR},
          </if>
          <if test="record.age != null">
            age = #{record.age,jdbcType=INTEGER},
          </if>
          <if test="record.score != null">
            score = #{record.score,jdbcType=INTEGER},
          </if>
          <if test="record.customSign != null">
            custom_sign = #{record.customSign,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_member
    set id = #{record.id,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      custom_sign = #{record.customSign,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tab_member
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.no != null">
            no = #{record.no,jdbcType=VARCHAR},
          </if>
          <if test="record.mobile != null">
            mobile = #{record.mobile,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.nickname != null">
            nickname = #{record.nickname,jdbcType=VARCHAR},
          </if>
          <if test="record.headImg != null">
            head_img = #{record.headImg,jdbcType=VARCHAR},
          </if>
          <if test="record.age != null">
            age = #{record.age,jdbcType=INTEGER},
          </if>
          <if test="record.score != null">
            score = #{record.score,jdbcType=INTEGER},
          </if>
          <if test="record.customSign != null">
            custom_sign = #{record.customSign,jdbcType=VARCHAR},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMember">
    update tab_member
    set no = #{no,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      custom_sign = #{customSign,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.autuan.webdemo.project.modular.member.entity.TabMemberExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into tab_member
    (id, no, mobile, email, nickname, head_img, age, score, custom_sign, create_by, create_time, 
      update_by, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.no,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
        #{item.email,jdbcType=VARCHAR}, #{item.nickname,jdbcType=VARCHAR}, #{item.headImg,jdbcType=VARCHAR}, 
        #{item.age,jdbcType=INTEGER}, #{item.score,jdbcType=INTEGER}, #{item.customSign,jdbcType=VARCHAR}, 
        #{item.createBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tab_member (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'no'.toString() == column.value">
          #{item.no,jdbcType=VARCHAR}
        </if>
        <if test="'mobile'.toString() == column.value">
          #{item.mobile,jdbcType=VARCHAR}
        </if>
        <if test="'email'.toString() == column.value">
          #{item.email,jdbcType=VARCHAR}
        </if>
        <if test="'nickname'.toString() == column.value">
          #{item.nickname,jdbcType=VARCHAR}
        </if>
        <if test="'head_img'.toString() == column.value">
          #{item.headImg,jdbcType=VARCHAR}
        </if>
        <if test="'age'.toString() == column.value">
          #{item.age,jdbcType=INTEGER}
        </if>
        <if test="'score'.toString() == column.value">
          #{item.score,jdbcType=INTEGER}
        </if>
        <if test="'custom_sign'.toString() == column.value">
          #{item.customSign,jdbcType=VARCHAR}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=VARCHAR}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>